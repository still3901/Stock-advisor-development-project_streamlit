<Home>
=> SOXL의 전체 흐름을 나타내기 위함.

- 왼쪽 사이드바
1. 저희 프로젝트에 맞게 처음부터 입력을 해놓았다.
2. 시작날짜 종료날짜를 설정 -> 전체적인 SOXL 주가의 변동성을 나타냄
3. Number of Rows를 늘릴수록 종료날짜에 맞춰 제일 최근의 주식 데이터에서 하루전의 컬럼을 불러온다.
4. chart type을 선택할 수 있는데, 
    Candle타입은 전날의 종가보다 종가가 상승일 때 빨간색으로 표시되며 
    Line타입은 전체적인 흐름을 한눈에 볼 수 있다. 
    두개의 타입 모두 그래프에 커서를 갖다대면 그날의 종가가 보임.
    차트 아래의 Date를 움직이면 날짜를 미세조정할 수 있다. 확대 및 축소 가능



<SOXL stock price list> SOXL주가표
=> 예측할 날짜의 SOXL 주가를 자세히 보기위해 만듦. 
=> 예측하기 전날의 주가를 확인

1. test_data에서 하루를 선택.(2024-05-22)
2. 시작날짜를 2024-05-16 / 종료날짜를 2024-05-22로 설정
3. 최근 4일간의 종가를 라인차트로 그려주며, 주가를 확인함.


<Present investment opinion> 예측창
=> 예측할 날짜 입력 후 wordcloud 및 학습시킨 모델을 사용하여 5가지 분류로 나타냄.

1. 예측할 날짜 입력 (2024-05-22)
2. Generate wordcloud 버튼 클릭 => 생성
3. 창 새로고침 후 날짜 재입력 => Predict 버튼을 눌러 학습시킨 모델 사용하여 5가지 분류로 나타냄
4. 예측이 끝나면 풍선이 올라가는 효과
5. 분류결과 및 해당하는 이미지가 나옴.


< SOXL stock price list>
=> 분류결과가 맞는지 확인

1. 종료날짜에 예측할 날짜 +1 (2024-05-23)
2. 22일의 종가를 봐서 예측이 성공했다는걸 확인.





==========================================================================
Streamlit에서 상호작용이 발생할 때마다 전체 스크립트가 처음부터 다시 실행됩니다.
스크립트에 대용량 데이터셋을 로드하는 함수나 시간이 오래 걸리는 계산을 수행하는 함수가 포함되어 있다면, 스크립트가 재실행될 때마다 그 함수를 실행해야 합니다.

캐싱은 데이터를 일시적으로 고속 데이터 저장 계층인 캐시에 저장하는 기술이며, 특정 함수가 입력 값이 변경될 때만 다시 실행되도록 할 수 있습니다.

실제로 저희 모델을 돌릴 때 13분 가량 걸렸는데, 캐싱을 사용 후 5분 이내로 단축되었습니다.
